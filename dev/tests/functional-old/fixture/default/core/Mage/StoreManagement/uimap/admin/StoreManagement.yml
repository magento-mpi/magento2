#
# {license_notice}
#
# @category    Magento
# @package     Mage_StoreManagement
# @subpackage  functional_tests
# @copyright   {copyright}
# @license     {license_link}
#
--- #Manage Stores and related pages

# 'Manage Stores' page
manage_stores:
    mca: system_store/
    click_xpath: //ul[@id='nav']//a[contains(@href, 'system_store')]
    title: Stores / Settings / Stores / Magento Admin
    uimap: &manage_stores
        form:
            fieldsets:
                -
                    manage_stores:
                        xpath: //div[@id='storeGrid']
                        buttons:
                            reset_filter: //button[span='Reset Filter']
                            search: //button[span='Search']
                        links:
                            select_store_view: //td[normalize-space(@class)='a-left last']/a[text()='%NAME%']
                            next_page: //a[@title='Next page']
                            previous_page: //a[@title='Previous page']
                        dropdowns:
                            items_per_page: //select[@name='limit']
                        fields:
                            website_name: //input[@name='website_title']
                            store_name: //input[@name='group_title']
                            store_view_name: //input[@name='store_title']
                            page: //input[@name='page']
                        pageelements:
                            cell_store_link: //table[@id]/tbody//td[%cellIndex%]/a
                            grid_head: //*[@id='storeGrid_table']/thead/tr[@class='headings']
                            stores_table: //*[@id='storeGrid_table']/tbody
        buttons:
            create_website: //button[span='Create Website']
            create_store: //button[span='Create Store']
            create_store_view: //button[span='Create Store View']
        messages: &mainMessages
            success_saved_store: //li[normalize-space(@class)='success-msg' and contains(., 'The store has been saved')]
            success_saved_store_view: //li[normalize-space(@class)='success-msg' and contains(., 'The store view has been saved')]
            success_saved_website: //li[normalize-space(@class)='success-msg' and contains(., 'The website has been saved')]
            success_deleted_store: //li[normalize-space(@class)='success-msg' and contains(., 'The store has been deleted')]
            success_deleted_store_view: //li[normalize-space(@class)='success-msg' and contains(., 'The store view has been deleted')]
            success_deleted_website: //li[normalize-space(@class)='success-msg' and contains(., 'The website has been deleted')]

manage_stores_items_per_page:
    mca: system_store/limit/%limit%/
    title: Stores / Settings / Stores / Magento Admin
    uimap: *manage_stores

# 'New Store View' Page
new_store_view:
    mca: system_store/newStore/
    title: New Store View / Stores / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    store_view_info:
                        xpath: //form[@id='edit_form']
                        dropdowns:
                            store_name: //select[@id='store_group_id']
                            store_view_status: //select[@id='store_is_active']
                        fields:
                            store_view_name: //input[@id='store_name']
                            store_view_code: //input[@id='store_code']
                            store_view_sort_order: //input[@id='store_sort_order']
                        required: [store_name, store_view_name, store_view_code, store_view_status]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            save_store_view: //button[@data-ui-id='system-store-edit-save-button']
        messages:
            wrong_store_view_code: //li[normalize-space(@class)='error-msg' and contains(., 'The store code may contain only letters (a-z), numbers (0-9) or underscore(_), the first character must be a letter')]
            store_view_code_exist: //li[normalize-space(@class)='error-msg' and contains(., 'Store with the same code already exists')]

# 'Edit Store View' Page
edit_store_view:
    mca: system_store/editStore/store_id/%id%/
    title: %elementTitle% / Stores / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    store_view_info:
                        xpath: //form[@id='edit_form']
                        dropdowns:
                            store_name: //select[@id='store_group_id']
                            store_view_status: //select[@id='store_is_active']
                        fields:
                            store_view_name: //input[@id='store_name']
                            store_view_code: //input[@id='store_code']
                            store_view_sort_order: //input[@id='store_sort_order']
                        required: [store_name, store_view_name, store_view_code, store_view_status]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            delete_store_view: //button[span='Delete Store View']
            save_store_view: //button[@data-ui-id='system-store-edit-save-button']
        messages:
            wrong_store_view_code: //li[normalize-space(@class)='error-msg' and contains(., 'The store code may contain only letters (a-z), numbers (0-9) or underscore(_), the first character must be a letter')]
            store_view_code_exist: //li[normalize-space(@class)='error-msg' and contains(., 'Store with the same code already exists')]

# 'New Website' Page
new_website:
    mca: system_store/newWebsite/
    title: New Web Site / Stores / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    website_info:
                        xpath: //form[@id='edit_form']
                        fields:
                            website_name: //input[@id='website_name']
                            website_code: //input[@id='website_code']
                            website_sort_order: //input[@id='website_sort_order']
                        required: [website_name, website_code]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            save_website: //button[@data-ui-id='system-store-edit-save-button']
        messages:
            wrong_website_code: //li[normalize-space(@class)='error-msg' and contains(., 'Website code may only contain letters (a-z), numbers (0-9) or underscore(_), the first character must be a letter')]
            website_code_exist: //li[normalize-space(@class)='error-msg' and contains(., 'Website with the same code already exists.')]

# 'Edit Website' Page
edit_website:
    mca: system_store/editWebsite/website_id/%id%/
    title: %elementTitle% / Stores / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    website_info:
                        xpath: //form[@id='edit_form']
                        checkboxes:
                            set_default: //input[@id='is_default']
                        dropdowns:
                            default_store: //select[@id='website_default_group_id']
                        fields:
                            website_name: //input[@id='website_name']
                            website_code: //input[@id='website_code']
                            website_sort_order: //input[@id='website_sort_order']
                        required: [website_name, website_code]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            delete_website: //button[@data-ui-id='system-store-edit-delete-button']
            save_website: //button[@data-ui-id='system-store-edit-save-button']
        messages:
            wrong_website_code: //li[normalize-space(@class)='error-msg' and contains(., 'Website code may only contain letters (a-z), numbers (0-9) or underscore(_), the first character must be a letter')]
            website_code_exist: //li[normalize-space(@class)='error-msg' and contains(., 'Website with the same code already exists.')]

# 'New Store' Page
new_store:
    mca: system_store/newGroup/
    title: New Store / Stores / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    store_info:
                        xpath: //form[@id='edit_form']
                        dropdowns:
                            website: //select[@id='group_website_id']
                            root_category: //select[@id='group_root_category_id']
                        fields:
                            store_name: //input[@id='group_name']
                        required: [website, store_name, root_category]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            save_store: //button[@data-ui-id='system-store-edit-save-button']

# 'Edit Store' Page
edit_store:
    mca: system_store/editGroup/group_id/%id%/
    title: %elementTitle% / Stores / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    store_info:
                        xpath: //form[@id='edit_form']
                        dropdowns:
                            website: //select[@id='group_website_id']
                            root_category: //select[@id='group_root_category_id']
                            default_store_view: //select[@id='group_default_store_id']
                        fields:
                            store_name: //input[@id='group_name']
                        required: [website, store_name, root_category]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            delete_store: //button[span='Delete Store']
            save_store: //button[@data-ui-id='system-store-edit-save-button']

# 'Delete Store' Page
detele_store:
    mca: system_store/deleteGroup/item_id/%id%/
    title: Delete Store / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    backup_options:
                        xpath: //*[@id='page:main-container']
                        dropdowns:
                            create_backup: //select[@id='store_create_backup']
                        buttons:
                            reset: //button[span='Cancel']
                            delete_store: //button[@id='delete']
        buttons:
            back: //button[span='Back']

# 'Delete Website' Page
detele_website:
    mca: system_store/deleteWebsite/item_id/%id%/
    title: Delete Web Site / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    backup_options:
                        xpath: //*[@id='page:main-container']
                        dropdowns:
                            create_backup: //select[@id='store_create_backup']
                        buttons:
                            reset: //button[span='Cancel']
                            delete_website: //button[@id='delete']
        buttons:
            back: //button[span='Back']

# 'Delete Store View' Page
detele_store_view:
    mca: system_store/deleteStore/item_id/%id%/
    title: Delete Store View / Settings / Stores / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    backup_options:
                        xpath: //*[@id='page:main-container']
                        dropdowns:
                            create_backup: //select[@id='store_create_backup']
                        buttons:
                            reset: //button[span='Cancel']
                            delete_store_view: //button[@id='delete']
        buttons:
            back: //button[span='Back']