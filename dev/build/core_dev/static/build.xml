<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * Apache Ant's build file for core development static tests
 *
 * {license_notice}
 *
 * @copyright  {copyright}
 * @license    {license_link}
 */
-->
<project name="Core Development Static Tests" basedir="../../../../" default="_static_tests_all">
    <import file="../util.xml"/>

    <target name="_jshint_path_substitution" description="JsHint Javascript file path substitution from environment variable">
        <fail unless="phpunit_config_file" message="Property 'phpunit_config_file' must be defined"/>
        <fail unless="env.JsHintPath" message="Environment variable 'JsHintPath' must be defined"/>
        <replace file="${phpunit_config_file}">
            <replacefilter token="{{tests_jshint_path}}" value="${env.JsHintPath}"/>
        </replace>
    </target>

    <target name="_static_tests_no_js" depends="_product_location" description="All static tests without JS static test">
        <copy file="${basedir}/dev/build/core_dev/static/phpunit.php.xml"
              tofile="${product_root_dir}/dev/tests/static/phpunit.xml" overwrite="true"/>
        <copy file="${basedir}/dev/build/core_dev/static/pdepend.xml"
              tofile="${product_root_dir}/dev/tests/static/pdepend.xml" overwrite="true"/>
        <replace file="${product_root_dir}/dev/tests/static/pdepend.xml">
            <replacefilter token="{{pdepend_cache_path}}" value="${product_root_dir}/var/pdepend"/>
        </replace>
        <exec dir="${product_root_dir}/dev/tests/static" executable="phpunit" failonerror="true">
            <arg line="--log-junit ${basedir}/static_tests_no_js.xml"/>
        </exec>
        <delete dir="${product_root_dir}/var/pdepend"/>
    </target>

    <target name="_code_legacy_tests" depends="_product_location" description="Code Legacy Tests">
        <script language="javascript"><![CDATA[
            var currentBranch = project.getProperty('env.bamboo_repository_git_branch');
            var currentRepo = project.getProperty('env.bamboo_repository_git_repositoryUrl');
            var additionalOptions = project.getProperty('env.bamboo_additional_options');

            var parts = currentRepo.split("/");
            var teamRepo = parts[parts.length - 2];

            if (teamRepo != 'magento2') {
                var get_github_changes = project.createTask('exec');
                get_github_changes.setExecutable('php');
                get_github_changes.setResultProperty('script_exit_code');
                var arg = get_github_changes.createArg();
                var command = "-f " + project.getProperty('basedir')
                        + "/dev/build/core_dev/static/get_github_changes.php -- --team-repo="
                        + teamRepo + " --feature-branch=" + currentBranch + " " + additionalOptions;
                arg.setLine(command);
                get_github_changes.execute();

                if (project.getProperty('script_exit_code') == 0) {
                    importClass(java.io.File);
                    var file = project.getProperty('basedir') + '/dev/build/core_dev/static/phpunit.legacy.xml';

                    var replace = project.createTask('replace');
                    replace.setFile(new File(file));

                    var openingReplaceFilter = replace.createReplacefilter();
                    openingReplaceFilter.setToken('<!--incremental_build_placeholder');
                    openingReplaceFilter.setValue(' ');
                    var closingReplaceFilter = replace.createReplacefilter();
                    closingReplaceFilter.setToken('incremental_build_placeholder-->');
                    closingReplaceFilter.setValue(' ');

                    replace.execute();

                    var copyTask = project.createTask('copy');
                    copyTask.setFile(new File(project.getProperty('basedir') + '/changed_files.txt'));
                    copyTask.setTofile(new File(project.getProperty('product_root_dir') + '/dev/tests/static/testsuite/Magento/Test/Legacy/_files/changed_files.txt'));
                    copyTask.setOverwrite(true);
                    copyTask.execute();
                }
            }
        ]]></script>

        <copy file="${basedir}/dev/build/core_dev/static/phpunit.legacy.xml"
              tofile="${product_root_dir}/dev/tests/static/phpunit.xml" overwrite="true"/>
        <exec dir="${product_root_dir}/dev/tests/static" executable="phpunit" failonerror="true">
            <arg line="--log-junit ${basedir}/code_legacy_tests.xml"/>
        </exec>
    </target>

    <target name="_code_integrity_tests" depends="_product_location" description="Code Integrity Tests">
        <copy file="${basedir}/dev/build/core_dev/static/phpunit.integrity.xml"
              tofile="${product_root_dir}/dev/tests/static/phpunit.xml" overwrite="true"/>
        <exec dir="${product_root_dir}/dev/tests/static" executable="phpunit" failonerror="true">
            <arg line="--log-junit ${basedir}/code_integrity_tests.xml"/>
        </exec>
    </target>

    <target name="_sanity_check" depends="_product_location" description="Static sanity check">
        <fail unless="product_edition_code" message="Property 'product_edition_code' must be defined"/>
        <exec executable="php" failonerror="true">
            <arg line="-f ${basedir}/dev/build/publication/sanity/sanity.php --
                -w ${product_root_dir}
                -c ${basedir}/dev/build/publication/sanity/${product_edition_code}.xml
                -v
                "/>
        </exec>
    </target>

    <target name="static_tests_ee" depends="_server_info" description="Static tests for EE">
        <antcall>
            <param name="license_replacement_enabled" value="true"/>
            <param name="product_edition_code" value="ee"/>
            <target name="_product_edition"/>
            <target name="_static_tests_no_js"/>
        </antcall>
    </target>

    <target name="sanity_check_ce" depends="_server_info" description="Sanity Check for CE">
        <antcall>
            <param name="license_replacement_enabled" value="true"/>
            <param name="product_edition_code" value="ce"/>
            <target name="_product_edition_no_additional"/>
            <target name="_sanity_check"/>
        </antcall>
    </target>

    <target name="sanity_check_ee" depends="_server_info" description="Sanity Check for EE">
        <antcall>
            <param name="license_replacement_enabled" value="true"/>
            <param name="product_edition_code" value="ee"/>
            <target name="_product_edition_no_additional"/>
            <target name="_sanity_check"/>
        </antcall>
    </target>

    <target name="static_tests_ce" depends="_server_info" description="Static tests for CE">
        <antcall>
            <param name="license_replacement_enabled" value="true"/>
            <param name="product_edition_code" value="ce"/>
            <target name="_product_edition"/>
            <target name="_static_tests_no_js"/>
        </antcall>
    </target>

    <target name="static_tests_js" depends="_server_info,_product_location" description="JS static tests">
        <copy file="${basedir}/dev/build/core_dev/static/phpunit.js.xml"
              tofile="${product_root_dir}/dev/tests/static/phpunit.xml" overwrite="true"/>
        <antcall target="_jshint_path_substitution">
            <param name="phpunit_config_file" value="${product_root_dir}/dev/tests/static/phpunit.xml"/>
        </antcall>
        <exec dir="${product_root_dir}/dev/tests/static" executable="phpunit" failonerror="true">
            <arg line="--log-junit ${basedir}/static_tests_js.xml"/>
        </exec>
    </target>

    <target name="code_legacy_tests_ee" depends="_server_info" description="Code Legacy Tests for Enterprise Edition">
        <antcall>
            <param name="product_edition_code" value="ee"/>
            <target name="_product_edition"/>
            <target name="_code_legacy_tests"/>
        </antcall>
    </target>

    <target name="code_legacy_tests_ce" depends="_server_info" description="Code Legacy Tests for Community Edition">
        <antcall>
            <param name="product_edition_code" value="ce"/>
            <target name="_product_edition"/>
            <target name="_code_legacy_tests"/>
        </antcall>
    </target>

    <target name="code_integrity_tests_ee" depends="_server_info" description="Code Integrity Tests for Enterprise Edition">
        <antcall>
            <param name="product_edition_code" value="ee"/>
            <target name="_product_edition"/>
            <target name="_code_integrity_tests"/>
        </antcall>
    </target>

    <target name="code_integrity_tests_ce" depends="_server_info" description="Code Integrity Tests for Community Edition">
        <antcall>
            <param name="product_edition_code" value="ce"/>
            <target name="_product_edition"/>
            <target name="_code_integrity_tests"/>
        </antcall>
    </target>

</project>
