<?php
/**
 * {license_notice}
 *
 * @copyright   {copyright}
 * @license     {license_link}
 */
?>
<?php
/**
 * Document content
 *
 * @var $this \Magento\Doc\Ui\Element\Document
 */
?>
<div class="document" id="document">
    <?php echo $this->renderDocumentHtml() ?>
</div>
<script>
    var items = [];
    var requiredHtml = 'Element %s is required!';
    var saveElement = function (item) {
        var view = jQuery(item.find('*[data-role="doc-item-content"]')[0]);
        var source = jQuery(item.find('*[data-role="doc-item-content-src"]')[0]);
        var content = source.val(),
            type = source.attr('content-type'),
            module = source.attr('module'),
            scheme = source.attr('scheme'),
            name = source.attr('doc-name');
        jQuery.ajax({
            url: '/doc/index',
            method: 'POST',
            data: {
                action: 'save',
                content: content,
                type: type,
                module: module,
                scheme: scheme,
                name: name
            },
            success: function (response) {
                view.html(response);
                view.show();
                jQuery('#toolbar-save').removeClass('hasChanges').removeClass('hasActivated');
                if (item.editor) {
                    item.editor.currentView.hide();
                } else {
                    view.html(content);
                    jQuery(source).hide();
                    JUMLY.scan(view, {});
                }
                ensureIsNotEmpty(view);
            }
        });
    };
    var ensureIsNotEmpty = function(jEl) {
        var content = jEl.html().trim();
        if (!content && !jEl.attr('optional')) {
            jEl.html(requiredHtml.replace(/%s/g, jEl.attr('data-type')));
        }
    };

    var init = {
        article: function(item) {
            var content = jQuery(item.find('*[data-role="doc-item-content"]')[0]);
            var srcContent = jQuery(item.find('*[data-role="doc-item-content-src"]')[0]);
            var initToolbar = function (element) {
                var content = jQuery(element.find('*[data-role="doc-item-content"]')[0]);
                var srcContent = jQuery(element.find('*[data-role="doc-item-content-src"]')[0]);

                content.hide();
                srcContent.show();
                srcContent.css('min-height', content.height() + 100);

                if (!element.editor) {
                    var editor = new wysihtml5.Editor(srcContent[0], {
                        toolbar:      "toolbar",
                        stylesheets: ["<?php echo $this->getViewFileUrl('Magento_Doc::wysihtml/css/editor.css') ?>"],
                        parserRules:  wysihtml5ParserRules
                    });
                    element.editor = editor;
                    editor.observe("change", function() {
                        if (srcContent.data('orig')) {
                            if (srcContent.data('orig') !== srcContent.val()) {
                                jQuery('#toolbar-save').addClass('hasChanges');
                            } else {
                                jQuery('#toolbar-save').removeClass('hasChanges');
                            }
                        }
                    });
                    editor.focus();
                } else {
                    srcContent.hide();
                    element.editor.currentView.show();
                    element.editor.focus();
                }
            };
            srcContent.data('orig', srcContent.val());
            content.on('click', function (event) {
                initToolbar(item);
                event.stopPropagation();
            });
            ensureIsNotEmpty(content);
            items.push(item);
        },
        diagram: function(item) {
            var content = jQuery(item.find('*[data-role="doc-item-content"]')[0]);
            var script = jQuery(item.find('script[type="text/jumly+sequence"]')[0]);
            var srcContent = jQuery(item.find('*[data-role="doc-item-content-src"]')[0]);
            srcContent.data('orig', srcContent.val());
            item.on('click', function (event) {
                content.hide();
                srcContent.show();
                srcContent.css('min-height', content.height() + 100);
                srcContent[0].addEventListener("keyup", function() {
                    if (srcContent.data('orig')) {
                        if (srcContent.data('orig') !== srcContent.val()) {
                            jQuery('#toolbar-save').addClass('hasChanges');
                        } else {
                            jQuery('#toolbar-save').removeClass('hasChanges');
                        }
                    }
                });
                event.stopPropagation();
            });
            items.push(item);
        },
        api: function(item) {
            item.on('click', function (event) {
                event.stopPropagation();
            });
        }
    };

    jQuery.each(jQuery.find('div[data-role="doc-item"]'), function (id, el) {
        var item = jQuery(el);
        var dataType = item.attr('data-type');
        if (init[dataType]) {
            init[dataType](item);
        }
    });

    document.getElementById('toolbar-save').addEventListener('click', function (event) {
        jQuery.each(items, function (id, item) {
            saveElement(item);
        });
    });

    if (webkitSpeechRecognition) {
        var buffer, recognitionActive, recognition = new webkitSpeechRecognition();
        buffer = jQuery('#speech-buffer');
        buffer.on('change', function(event) {
            if (!buffer.val()) {
                buffer.hide();
            }
        });

        recognition.continuous = true;
        recognition.lang = 'en';
        recognition.onresult = function(event) {
            var final = '';
            for (var i = event.resultIndex; i < event.results.length; ++i) {
                if (event.results[i].isFinal) {
                    final += event.results[i][0].transcript;
                }
            }
            buffer.button.removeClass('isActive');
            if (final) {
                buffer.val(final);
                buffer.show();
            }
        };
        document.getElementById('toolbar-speech').addEventListener('click', function (event) {
            var element = event.target || event.srcElement;
            if (recognitionActive) {
                recognition.stop();
                recognitionActive = false;
            } else {
                recognition.start();
                recognitionActive = true;
                buffer.button = jQuery(element);
                buffer.button.addClass('isActive');
            }
        });
    }
</script>
