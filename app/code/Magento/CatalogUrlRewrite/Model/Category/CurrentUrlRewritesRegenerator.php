<?php
/**
 * {license_notice}
 *
 * @copyright   {copyright}
 * @license     {license_link}
 */
namespace Magento\CatalogUrlRewrite\Model\Category;

use Magento\Catalog\Model\Category;
use Magento\CatalogUrlRewrite\Model\CategoryUrlRewriteGenerator;
use Magento\CatalogUrlRewrite\Model\CategoryUrlPathGenerator;
use Magento\UrlRewrite\Service\V1\Data\UrlRewriteBuilder;
use Magento\UrlRewrite\Service\V1\Data\UrlRewrite;
use Magento\UrlRewrite\Model\OptionProvider;
use Magento\UrlRewrite\Service\V1\UrlFinderInterface;

class CurrentUrlRewritesRegenerator
{
    /** @var \Magento\CatalogUrlRewrite\Model\CategoryUrlPathGenerator */
    protected $categoryUrlPathGenerator;

    /** @var \Magento\UrlRewrite\Service\V1\Data\UrlRewriteBuilder */
    protected $urlRewriteBuilder;

    /** @var UrlFinderInterface */
    protected $urlFinder;

    /** @var \Magento\Catalog\Model\Category */
    protected $category;

    /**
     * @param \Magento\CatalogUrlRewrite\Model\CategoryUrlPathGenerator $categoryUrlPathGenerator
     * @param \Magento\UrlRewrite\Service\V1\Data\UrlRewriteBuilder $urlRewriteBuilder
     * @param UrlFinderInterface $urlFinder
     */
    public function __construct(
        CategoryUrlPathGenerator $categoryUrlPathGenerator,
        UrlRewriteBuilder $urlRewriteBuilder,
        UrlFinderInterface $urlFinder
    ) {
        $this->categoryUrlPathGenerator = $categoryUrlPathGenerator;
        $this->urlRewriteBuilder = $urlRewriteBuilder;
        $this->urlFinder = $urlFinder;
    }

    /**
     * Generate list based on current url rewrites
     *
     * @param int $storeId
     * @param \Magento\Catalog\Model\Category $category
     * @return \Magento\UrlRewrite\Service\V1\Data\UrlRewrite[]
     */
    public function generate($storeId, Category $category)
    {
        $this->category = $category;

        $currentUrlRewrites = $this->urlFinder->findAllByData([
            UrlRewrite::STORE_ID => $storeId,
            UrlRewrite::ENTITY_ID => $category->getId(),
            UrlRewrite::ENTITY_TYPE => CategoryUrlRewriteGenerator::ENTITY_TYPE,
        ]);

        $urlRewrites = [];
        foreach ($currentUrlRewrites as $currentUrlRewrite) {
            $urlRewrites = array_merge(
                $urlRewrites,
                $currentUrlRewrite->getIsAutogenerated()
                    ? $this->generateForAutogenerated($currentUrlRewrite, $storeId)
                    : $this->generateForCustom($currentUrlRewrite, $storeId)
            );
        }
        return $urlRewrites;
    }

    /**
     * @param \Magento\UrlRewrite\Service\V1\Data\UrlRewrite $url
     * @param int $storeId
     * @return array
     */
    protected function generateForAutogenerated($url, $storeId)
    {
        $urls = [];
        if ($this->category->getData('save_rewrites_history')) {
            $targetPath = $this->categoryUrlPathGenerator->getUrlPathWithSuffix($this->category, $storeId);
            if ($url->getRequestPath() !== $targetPath) {
                $urls[] = $this->urlRewriteBuilder->setStoreId($url->getStoreId())
                    ->setEntityType(CategoryUrlRewriteGenerator::ENTITY_TYPE)
                    ->setEntityId($this->category->getId())
                    ->setRequestPath($url->getRequestPath())
                    ->setTargetPath($targetPath)
                    ->setRedirectType(OptionProvider::PERMANENT)
                    ->setIsAutogenerated(0)
                    ->create();
            }
        }
        return $urls;
    }

    /**
     * @param \Magento\UrlRewrite\Service\V1\Data\UrlRewrite $url
     * @param int $storeId
     * @return array
     */
    protected function generateForCustom($url, $storeId)
    {
        $urls = [];
        $targetPath = $this->isGeneratedByUser($url) || !$url->getRedirectType()
            ? $url->getTargetPath()
            : $this->categoryUrlPathGenerator->getUrlPathWithSuffix($this->category, $storeId);

        if ($url->getRequestPath() !== $targetPath) {
            $urls[] = $this->urlRewriteBuilder->setStoreId($storeId)
                ->setEntityType(CategoryUrlRewriteGenerator::ENTITY_TYPE)
                ->setEntityId($this->category->getId())
                ->setRequestPath($url->getRequestPath())
                ->setTargetPath($targetPath)
                ->setRedirectType($url->getRedirectType())
                ->setIsAutogenerated(0)
                ->setMetadata($url->getMetadata())
                ->setDescription($url->getDescription())
                ->create();
        }
        return $urls;
    }

    /**
     * @param \Magento\UrlRewrite\Service\V1\Data\UrlRewrite $url
     * @return bool
     */
    protected function isGeneratedByUser($url)
    {
        $metadata = $url->getMetadata();
        return !empty($metadata['is_user_generated']);
    }
}
